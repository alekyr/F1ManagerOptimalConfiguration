function y = FUNOBJ_overall(x,p)
% The problem that is solved here is defined as:
% 
%     m  n                              n
% J = Σ (Σ(Component(i).Attribute(j)) - Σ(Component(i).MaxValueofAttribute(j)))
%     j  i                              i
% 
% i = [Brakes, Gear, RearWing, FrontWing, Suspension, Engine]
% j = [Power, Aero, Grip, Reliability, AveragePitStopTime]
% n = length(i)
% m = length(j)
% 
% Maximum value of attribute j in component i is defined in main.m file,
% which is a required input for this problem.
% 
% The idea behind the formulation of this objective function is that in
% contrast with the obective in "OBJECTIVE.m" file, where for each type of
% equipment we select the one that performs better overall in all
% categories, we want to choose the compination that performs best in terms
% of "sum(i,j) = of maximum attribute (i) of component (j)". For example
% Brake(i) might be the best brake amont Brake.Equipment and Gear(j) might
% be the best gear among Gear.Equipment, based on "OBJECTIVE.m" file. But
% there might be a combination of "Brake(ii) and Gear(jj)" that might give
% a better result overall :
% Break(ii).Power + Gear(jj).Power > Break(i).Power + Gear(j).Power
% Well this specific expresion can (probably) not be true but if you
% consider all attributes then it makes sence...


% Give more meaningfull names to the decision variables
x_brakes     = x(1);
x_gear       = x(2);
x_rearwing   = x(3);
x_frontwing  = x(4);
x_suspension = x(5);
x_engine     = x(6);

% Calculate the overall maximum value of each attribute (e.g.,
% total_max_power), defined as the sum of each component corresponding
% attribute value. Additionally, calculate each coresponding overall 
% attribute value (e.g., total_power) based on the current setup selection
% (decision variables values).
% Power
total_power = p.Brakes.Data(1,x_brakes)...
            + p.Gear.Data(1,x_gear)...
            + p.RearWing.Data(1,x_rearwing)...
            + p.FrontWing.Data(1,x_frontwing)...
            + p.Suspension.Data(1,x_suspension)...
            + p.Engine.Data(1,x_engine);

total_max_power = p.Brakes.MaxPower...
                + p.Gear.MaxPower...
                + p.RearWing.MaxPower...
                + p.FrontWing.MaxPower...
                + p.Suspension.MaxPower...
                + p.Engine.MaxPower;

% Aero
total_aero = p.Brakes.Data(2,x_brakes)...
            + p.Gear.Data(2,x_gear)...
            + p.RearWing.Data(2,x_rearwing)...
            + p.FrontWing.Data(2,x_frontwing)...
            + p.Suspension.Data(2,x_suspension)...
            + p.Engine.Data(2,x_engine);

total_max_aero = p.Brakes.MaxAero...
                + p.Gear.MaxAero...
                + p.RearWing.MaxAero...
                + p.FrontWing.MaxAero...
                + p.Suspension.MaxAero...
                + p.Engine.MaxAero;

% Grip
total_grip = p.Brakes.Data(3,x_brakes)...
            + p.Gear.Data(3,x_gear)...
            + p.RearWing.Data(3,x_rearwing)...
            + p.FrontWing.Data(3,x_frontwing)...
            + p.Suspension.Data(3,x_suspension)...
            + p.Engine.Data(3,x_engine);

total_max_grip = p.Brakes.MaxGrip...
                + p.Gear.MaxGrip...
                + p.RearWing.MaxGrip...
                + p.FrontWing.MaxGrip...
                + p.Suspension.MaxGrip...
                + p.Engine.MaxGrip;

% Reliability
total_reliability = p.Brakes.Data(4,x_brakes)...
            + p.Gear.Data(4,x_gear)...
            + p.RearWing.Data(4,x_rearwing)...
            + p.FrontWing.Data(4,x_frontwing)...
            + p.Suspension.Data(4,x_suspension)...
            + p.Engine.Data(4,x_engine);

total_max_reliability = p.Brakes.MaxReliability...
                + p.Gear.MaxReliability...
                + p.RearWing.MaxReliability...
                + p.FrontWing.MaxReliability...
                + p.Suspension.MaxReliability...
                + p.Engine.MaxReliability;

% Reliability
total_averagepitstoptime = p.Brakes.Data(5,x_brakes)...
            + p.Gear.Data(5,x_gear)...
            + p.RearWing.Data(5,x_rearwing)...
            + p.FrontWing.Data(5,x_frontwing)...
            + p.Suspension.Data(5,x_suspension)...
            + p.Engine.Data(5,x_engine);

total_min_averagepitstoptime = p.Brakes.MinAveragePitStopTime...
                + p.Gear.MinAveragePitStopTime...
                + p.RearWing.MinAveragePitStopTime...
                + p.FrontWing.MinAveragePitStopTime...
                + p.Suspension.MinAveragePitStopTime...
                + p.Engine.MinAveragePitStopTime;

% Objective
y = p.Weight(1) * (total_power - total_max_power)^2 ...
  + p.Weight(2) * (total_aero - total_max_aero)^2 ...
  + p.Weight(3) * (total_grip - total_max_grip)^2 ...
  + p.Weight(4) * (total_reliability - total_max_reliability)^2 ...
  + p.Weight(5) * (total_averagepitstoptime - total_min_averagepitstoptime)^2;

end
